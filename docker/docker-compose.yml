services:
  observer:
    image: ghcr.io/ogrodje/observer:latest
    ports:
      - "0.0.0.0:7778-7785:7777"
    restart: always
    environment:
      DATABASE_URL: jdbc:postgresql://pg:5432/observer
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USER: ${DATABASE_USER}
    # command: [ "server", "-P", "7777" ]
    # links: [ pg ]
    depends_on: [ pg ]

  pg:
    image: postgres:17
    # restart: always
    ports:
      - "0.0.0.0:5440:5432"
    environment:
      POSTGRES_DB: "observer"
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  kafka:
    image: bitnami/kafka:latest
    container_name: broker
    ports:
      - '9092:9092'
      - '9093:9093'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      SERVER_SERVLET_CONTEXTPATH: "/"
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9001:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"